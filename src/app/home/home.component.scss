*margin{
  margin:0;
  padding:0;
}
$color-primary:#f9ed69;// yellow color
$color-secondary:#f08a5d;// Orange color
$color-tertiary:#b83b5e;// pink color
$color-text-dark:darkgray;
$color-text-light:#eee;
$width-button: 150px;
@mixin clearfix {
  &::after{
    content:"";
    clear:both;
    display: table;
  }
}

@mixin style-link-text($color) {
  text-decoration: none;
  text-transform: uppercase;
  color: $color;
}
// difference between a function and a mixin is that we can return value from a function and functions are used to compute and not for declaring css rules
@function divide($a,$b){
  @return $a/$b;
}
// diff between mixin and placeholder extend is, mixin's code is placed automatically whereever it is included, whereas, placeholder extends takes the selectors where it is extended, and use those selectors seperated by comma, in a single place.
%btn_placeholder{
  padding:10px;
  display:inline-block;
  text-align:center;
  border-radius: 100px;
  text-decoration: none;
  text-transform: uppercase;
  width: $width-button;
}
nav{
  margin: divide(60,2) * 1px;
  background-color: $color-primary;
  // since .buttons and .navigation both are floating; nav looses its height so used clearfix like below
  @include clearfix();
  .buttons{
    float:right;
  }

}
.navigation{
  margin:0px;
  list-style:none;
  padding:0;
  float:left;
  // we can nest li inside .navigation selector instead of writting another selector like .navigation li
  li{
    margin-left:10px;
    display:inline-block;
    // Remember if you dont put & : first-child will be searched inside li, and not the li itself as first child
    &:first-child{
      margin:0;
    }
    // .navigation li a
    a:link{
      @include style-link-text($color-text-dark);
      padding:10px;
      display: inline-block;
    }
  }
}


.button-main{
  &:link{
    @extend %btn_placeholder;
    @include style-link-text(#fff);
    background-color: $color-secondary;

  }
  &:hover{
    @extend %btn_placeholder;
    background-color: darken($color-secondary, 15%);
    color: $color-text-light;
  }
}

.button-hot{
  &:link{
    @include style-link-text(#fff);
    background-color: hotpink;
  }
  &:hover{
    @include style-link-text(#fff);
    background-color: darken(hotpink, 15%);
    color: $color-text-light;
  }
}
